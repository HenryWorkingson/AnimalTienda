// <auto-generated />
using System;
using Animal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Animal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210608085602_floatToDouble")]
    partial class floatToDouble
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Animal.Animal", b =>
                {
                    b.Property<int>("id_Animal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<double>("peso")
                        .HasColumnType("float");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.Property<int>("tipo_Raza")
                        .HasColumnType("int");

                    b.HasKey("id_Animal");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("Animal.Atributo", b =>
                {
                    b.Property<int>("IdAtributo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAtributo");

                    b.ToTable("Atributo");
                });

            modelBuilder.Entity("Animal.AtributoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAtributo")
                        .HasColumnType("int");

                    b.Property<int>("IdAtributoValor")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("AtributoProducto");
                });

            modelBuilder.Entity("Animal.Atributo_Valor", b =>
                {
                    b.Property<int>("IdAtributoValor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtributoIdAtributo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAtributo")
                        .HasColumnType("int");

                    b.HasKey("IdAtributoValor");

                    b.HasIndex("AtributoIdAtributo");

                    b.ToTable("Atributo_Valor");
                });

            modelBuilder.Entity("Animal.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caracteristica");
                });

            modelBuilder.Entity("Animal.CaracteristicaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCaracteristica")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoIdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoIdProducto");

                    b.ToTable("CaracteristicaProducto");
                });

            modelBuilder.Entity("Animal.Clase_Producto", b =>
                {
                    b.Property<int>("id_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id_Asignado")
                        .HasColumnType("int");

                    b.Property<float>("Precio_Producto")
                        .HasColumnType("real");

                    b.Property<string>("Tipo_Producto")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_Producto");

                    b.ToTable("Clase_Producto");
                });

            modelBuilder.Entity("Animal.Cliente", b =>
                {
                    b.Property<int>("id_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido_Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre_Cliente")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("correo_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuenta_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Cliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Animal.Comida", b =>
                {
                    b.Property<int>("id_Comida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion_Comida")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre_Comida")
                        .HasColumnType("varchar(50)");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("id_Comida");

                    b.ToTable("Comida");
                });

            modelBuilder.Entity("Animal.Direccion_Envio", b =>
                {
                    b.Property<int>("id_DireccionEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Clienteid_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("DNI_Cliente_Rceiv")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Municipal")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre_Cliente_Rec")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre_Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_DireccionEnvio");

                    b.HasIndex("Clienteid_Cliente");

                    b.ToTable("Direccion_Envio");
                });

            modelBuilder.Entity("Animal.Juguete", b =>
                {
                    b.Property<int>("id_Juguete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion_Juguete")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre_Juguete")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("id_Juguete");

                    b.ToTable("Juguete");
                });

            modelBuilder.Entity("Animal.LineaDireccionCliente", b =>
                {
                    b.Property<int>("id_DireccionCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Direccion")
                        .HasColumnType("int");

                    b.Property<bool>("Ultima_Dir_Env")
                        .HasColumnType("bit");

                    b.HasKey("id_DireccionCliente");

                    b.ToTable("LineaDireccionCliente");
                });

            modelBuilder.Entity("Animal.LineaTarjetaCliente", b =>
                {
                    b.Property<int>("id_TarjetaCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tarjeta")
                        .HasColumnType("int");

                    b.Property<bool>("Ultima_Tarjeta")
                        .HasColumnType("bit");

                    b.HasKey("id_TarjetaCliente");

                    b.ToTable("LineaTarjetaCliente");
                });

            modelBuilder.Entity("Animal.Linea_Pedido", b =>
                {
                    b.Property<int>("id_LineaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<double>("PrecioProductoUnitario")
                        .HasColumnType("float");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("float");

                    b.Property<int>("id_Pedido")
                        .HasColumnType("int");

                    b.Property<int>("id_Producto")
                        .HasColumnType("int");

                    b.HasKey("id_LineaPedido");

                    b.ToTable("Linea_Pedido");
                });

            modelBuilder.Entity("Animal.Pedido", b =>
                {
                    b.Property<int>("id_Pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Clienteid_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion_Pedido")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Direccion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tarjeta")
                        .HasColumnType("int");

                    b.Property<double>("Precio_Total")
                        .HasColumnType("float");

                    b.HasKey("id_Pedido");

                    b.HasIndex("Clienteid_Cliente");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Animal.PrecioProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FechaFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("PVP")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PrecioProducto");
                });

            modelBuilder.Entity("Animal.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Animal.Raza", b =>
                {
                    b.Property<int>("id_Raza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion_Raza")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre_Raza")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id_Raza");

                    b.ToTable("Raza");
                });

            modelBuilder.Entity("Animal.TarjetaPago", b =>
                {
                    b.Property<int>("id_TarjetaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Clienteid_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("FechaCadu_Tarjeta")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nom_Propietario")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero_Tarjeta")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("id_TarjetaPago");

                    b.HasIndex("Clienteid_Cliente");

                    b.ToTable("TarjetaPago");
                });

            modelBuilder.Entity("Linea_PedidoPedido", b =>
                {
                    b.Property<int>("Lista_Pedidosid_Pedido")
                        .HasColumnType("int");

                    b.Property<int>("lineasid_LineaPedido")
                        .HasColumnType("int");

                    b.HasKey("Lista_Pedidosid_Pedido", "lineasid_LineaPedido");

                    b.HasIndex("lineasid_LineaPedido");

                    b.ToTable("Linea_PedidoPedido");
                });

            modelBuilder.Entity("Animal.AtributoProducto", b =>
                {
                    b.HasOne("Animal.Producto", null)
                        .WithMany("lineasAtri")
                        .HasForeignKey("ProductoIdProducto");
                });

            modelBuilder.Entity("Animal.Atributo_Valor", b =>
                {
                    b.HasOne("Animal.Atributo", null)
                        .WithMany("lineas")
                        .HasForeignKey("AtributoIdAtributo");
                });

            modelBuilder.Entity("Animal.CaracteristicaProducto", b =>
                {
                    b.HasOne("Animal.Producto", null)
                        .WithMany("lineasCarac")
                        .HasForeignKey("ProductoIdProducto");
                });

            modelBuilder.Entity("Animal.Direccion_Envio", b =>
                {
                    b.HasOne("Animal.Cliente", null)
                        .WithMany("lineasDir")
                        .HasForeignKey("Clienteid_Cliente");
                });

            modelBuilder.Entity("Animal.Pedido", b =>
                {
                    b.HasOne("Animal.Cliente", null)
                        .WithMany("lineasPedido")
                        .HasForeignKey("Clienteid_Cliente");
                });

            modelBuilder.Entity("Animal.TarjetaPago", b =>
                {
                    b.HasOne("Animal.Cliente", null)
                        .WithMany("lineasTar")
                        .HasForeignKey("Clienteid_Cliente");
                });

            modelBuilder.Entity("Linea_PedidoPedido", b =>
                {
                    b.HasOne("Animal.Pedido", null)
                        .WithMany()
                        .HasForeignKey("Lista_Pedidosid_Pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animal.Linea_Pedido", null)
                        .WithMany()
                        .HasForeignKey("lineasid_LineaPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Animal.Atributo", b =>
                {
                    b.Navigation("lineas");
                });

            modelBuilder.Entity("Animal.Cliente", b =>
                {
                    b.Navigation("lineasDir");

                    b.Navigation("lineasPedido");

                    b.Navigation("lineasTar");
                });

            modelBuilder.Entity("Animal.Producto", b =>
                {
                    b.Navigation("lineasAtri");

                    b.Navigation("lineasCarac");
                });
#pragma warning restore 612, 618
        }
    }
}
